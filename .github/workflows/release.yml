name: Build/release Electron app

on:
  workflow_dispatch:
  push:
    tags: "*"

env:
  NODE_VERSION: 20.17.0

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm ci
      - run: npm run check:tsc

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run package:linux

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: yarc-linux-snap
          path: dist/*.snap
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: yarc-linux-appimage
          path: dist/*.AppImage
          if-no-files-found: error

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: npm run package:mac

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-latest'
        with:
          name: yarc-mac-dmg
          path: dist/*.dmg
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-latest'
        with:
          name: yarc-mac-zip
          path: dist/*.zip
          if-no-files-found: error

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: npm run package:win

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest'
        with:
          name: yarc-windows-installer
          path: dist/*.exe
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest'
        with:
          name: yarc-windows-portable
          path: dist/win-unpacked
          if-no-files-found: error

  github-release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
